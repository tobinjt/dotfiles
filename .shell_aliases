#!/bin/bash

# ls needs different options to enable colour :/
if ls --color=always &> /dev/null; then
  # Linux.
  alias ls='ls --color=auto -F'
else
  # OS X.
  alias ls='ls -G -F'
fi

alias mv="mv -i"
alias cp="cp -i -p"
alias grep='grep --color=auto'
alias python="python3"

cd() {
  cd_helper cd "$@"
}
pushd() {
  cd_helper pushd "$@"
}
cdpwd() {
  builtin cd "$(pwd -P)" || return 1
}

alias ta='tmux_attach'

top() {
  local -a top_args
  # top on Mac OS X does not sort by CPU by default; fix that.
  if is_mac_os; then
    top_args=(-o cpu)
  fi
  TOP="$((${LINES:-24} - 7))" command top "${top_args[@]}" "$@"
}

# git sets better options if $LESS is unset.
git() {
    # MacOS env doesn't have --unset.
    (unset LESS; command git "$@")
}
# hg sets better options if $LESS is unset.
hg() {
    # MacOS env doesn't have --unset.
    (unset LESS; command hg "$@")
}


# Load .bcrc to have some helper stuff, but only when running interactively.
bc() {
  if [ -t 0 ] && [ "$#" -eq 0 ]; then
    command bc -q -i "${HOME}/.bcrc"
  else
    command bc -q "$@"
  fi
}

scp() {
  # Do not set up the ControlMaster socket because scp does not set up SSH
  # forwarding, so if I ssh over an scp ControlMaster ssh forwarding doesn't
  # work.
  command scp -o ControlMaster=no "$@"
}

irssi() {
  TERM=xterm-color command irssi "$@"
}

countsort() {
  sort "$@" | uniq -c | sort -n
}

only_duplicates() {
  fmt -1 "$@" | sort | uniq -d | xargs echo
}

timestamp-to-human-localtime() {
  perl -Mstrict -n -e 'print scalar localtime $_, qq{\n}'
}

# Strip the directory from a file.
vimf() {
  vim "$(basename "$1")"
}

# grep for something and output in vim quickfix format.
cfile() {
  if type rg >& /dev/null; then
    if [[ -t 1 ]]; then
      rg -n --with-filename --hidden --glob '!.git/**' "$@"
    else
      rg -n --with-filename --hidden --glob '!.git/**' "$@" \
        | LC_ALL=C natural_sort
    fi
  else
    if is_mac_os; then
      # MacOS grep doesn't automatically add the current directory like GNU
      # grep.  This workaround isn't ideal: if I pass a filename the directory
      # will still be added.
      grep -r -n -H "$@" .
    else
      grep -r -n -H "$@"
    fi
  fi
}

# Load errors from $1.
vim-cfile() {
  vim -c ':cfile '"$1"' | :cwindow'
}

vim-grep() {
  local tmpfile
  tmpfile="$(mktemp -t vim-grep.XXXXXXXXXXXX)"
  cfile "$@" > "${tmpfile}"
  vim-cfile "${tmpfile}"
  rm -f "${tmpfile}"
}

# Handy link to airport utility.
airport() {
  # shellcheck disable=SC2039
  local file="/System/Library/PrivateFrameworks/Apple80211.framework/Versions"
  file="${file}/A/Resources/airport"
  "${file}" "$@"
}

# Homebrew installs pip as pip3, so wrap it.
alias pip="pip3"
# Let Python write bytecode for future speed.
pip3() {
  (unset PYTHONDONTWRITEBYTECODE; command pip3 "$@")
}

# What's using an external disk?
using_external_disk() {
  sudo lsof -M -n -P | grep /Volumes
}

# I can never remember mdfind and locate is muscle-memory.
spotlight() {
  mdfind "$@"
}
locate() {
  mdfind "$@"
}

process_on_port() {
  netstat -n -p tcp -v | grep -e Proto -e "$1"
}

# Local stuff
local_shell_aliases="${HOME}/.shell_aliases-local"
if [ -f "${local_shell_aliases}" ]; then
  # shellcheck disable=SC1090
  . "${local_shell_aliases}"
fi
