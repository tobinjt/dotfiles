#!/bin/bash

# ls needs different options to enable colour :/
if ls --color=always &> /dev/null; then
  # Linux.
  alias ls='ls --color=auto -F'
else
  # OS X.
  alias ls='ls -G -F'
fi

alias mv="mv -i"
alias cp="cp -i -p"
alias grep='grep --color=auto'

# 'cd dirname/filename' will strip filename and cd to dirname.
cd_helper() {
  if [ "$#" -lt 1 ]; then
    printf "cd_helper: Expecting exactly one or two arguments\\n" >&2
    return 1
  fi
  local cmd="$1"
  if [ "$#" -gt 2 ]; then
    printf "%s: Expecting exactly zero or one arguments\\n" "${cmd}" >&2
    return 1
  fi
  # Support "cd".
  if [ "$#" -eq 1 ]; then
    builtin "${cmd}"
    return
  fi
  # Support "cd -".
  if [ "$2" == '-' ]; then
    builtin "${cmd}" "$2"
    return
  fi

  local dest="$2"
  if [ -d "${dest}" ]; then
    builtin "${cmd}" "${dest}"
    return
  fi
  #Â dirname will output . if there isn't a directory in $dest.
  dest="$(dirname "${dest}")"
  builtin "${cmd}" "${dest}"
}

cd() {
  cd_helper cd "$@"
}
pushd() {
  cd_helper pushd "$@"
}

# Attach to a tmux session or start a new one.
ta() {
  tmux attach -d || tmux new
}
top() {
  local top_args=""
  # top on Mac OS X does not sort by CPU by default; fix that.
  if [ "${OSTYPE#darwin}" != "${OSTYPE}" ]; then
    top_args="-o cpu"
  fi
  # shellcheck disable=SC2086
  TOP="$((${LINES:-24} - 7))" command top ${top_args} "$@"
}
strictperl() {
  perl -Mstrict -w -MData::Dumper "$@"
}

# git sets better options if $LESS is unset.
git() {
    # MacOS env doesn't have --unset.
    (unset LESS; command git "$@")
}

ikiwiki-johntobin.ie() {
  if ! type tidy > /dev/null; then
    printf "apt-get install tidy\\n" >&2
    return 1
  fi
  ikiwiki --setup ~/.ikiwiki/johntobin.ie "$@"
}

ikiwiki-johntobin.ie-preview() {
  ikiwiki-johntobin.ie --render "$@" | w3m -T text/html
}

clisp() {
  (ulimit -v 1048576 && command clisp -ansi -m 128MB "$@")
}

# Load .bcrc to have some helper stuff, but only when running interactively.
bc() {
  if [ -t 0 ] && [ "$#" -eq 0 ]; then
    command bc -q -i "${HOME}/.bcrc"
  else
    command bc "$@"
  fi
}

# Adapted from http://www.chiark.greenend.org.uk/~sgtatham/aliases.html
_echo-literally-helper() {
  history 1 | perl -pe 's/^ *[0-9]+ +[^ ]+ //'
}
alias echo-literally='_echo-literally-helper #'

irssi() {
  tmux set-window-option monitor-activity on
  TERM=xterm-color command irssi "$@"
  tmux set-window-option monitor-activity off
}

shell_functions() {
  set | grep '() $'
}

countsort() {
  sort "$@" | uniq -c | sort -n
}

only_duplicates() {
  fmt -1 "$@" | sort | uniq -d | xargs echo
}

delete-ipad-app-backups() {
  rm "${HOME}/Music/iTunes/iTunes Media/Mobile Applications"/*
}

timestamp-to-human-localtime() {
  # shellcheck disable=SC2016
  strictperl -n -e 'print scalar localtime $_, qq{\n}'
}

# Wrappers around 'go doc'.
godocl() {
  go doc "$@" | less
}
godocf() {
  go doc "$@" | grep ^func
}
godocserver() {
  printf "http://localhost:12345/\\n"
  godoc --http=:12345
}
gocdpkg() {
  local pdir
  pdir="$(go list -f '{{ .Dir }}' "$1")"
  if [ -z "${pdir}" ]; then
    printf "no directory found for pkg %s\\n" "$1"
    return 1
  fi
  cd "${pdir}" || return
}

# Strip the directory from a file.
vimf() {
  vim "$(basename "$1")"
}

# Load errors from $1.
vim-cfile() {
  vim -c ':cfile '"$1"' | :cwindow'
}

# Handy link to airport utility.
airport() {
  # shellcheck disable=SC2039
  local file="/System/Library/PrivateFrameworks/Apple80211.framework/Versions"
  file="${file}/A/Resources/airport"
  "${file}" "$@"
}

# Homebrew installs pip as pip3, so wrap it.
# Also let Python write bytecode for future speed.
pip() {
  (unset PYTHONDONTWRITEBYTECODE; pip3 "$@")
}

# What's using an external disk?
using_external_disk() {
  sudo lsof -M -n -P | grep /Volumes
}

# I can never remember mdfind.
spotlight() {
  mdfind "$@"
}

process_on_port() {
  netstat -n -p tcp -v  | grep -e Proto -e "$1"
}

cleanup-fate-world-of-adventure() {
  (set -e; cleanup-fate-world-of-adventure-real "$@")
}
cleanup-fate-world-of-adventure-real() {
  local filename="$1"
  local destdir="${HOME}/Documents/games/Fate/World of Adventure/"
  mv "${filename}" "${destdir}"
  cd "${destdir}"
  filename="$(basename "${filename}")"
  local new_filename="${filename%_o_A_World_of_Adventure_for_Fate_Core.pdf}.pdf"
  new_filename="${new_filename//_/ }"
  mv "${filename}" "${new_filename}"
}
