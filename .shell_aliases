#!/bin/sh

alias ls="ls -F" # --color=auto"
alias mv="mv -i"
alias cp="cp -i -p"

# 'cd dirname/filename' will strip filename and cd to dirname.
cd_helper() {
  if [ "$#" -lt 1 ]; then
    echo "cd_helper: Expecting exactly one or two arguments" >&2
    return 1
  fi
  local cmd="$1"
  if [ "$#" -gt 2 ]; then
    echo "${cmd}: Expecting exactly zero or one arguments" >&2
    return 1
  fi
  # Support "cd".
  if [ "$#" -eq 1 ]; then
    builtin "${cmd}"
    return
  fi
  # Support "cd -".
  if [ "$2" == '-' ]; then
    builtin "${cmd}" "$2"
    return
  fi

  local dest="$2"
  if [ -d "${dest}" ]; then
    builtin "${cmd}" "${dest}"
    return
  fi
  if [ ! -e "${dest}" ]; then
    echo "${cmd}: ${dest}: does not exist" >&2
    return 1
  fi
  #Â dirname will output . if there isn't a directory in $dest.
  dest="$(dirname "${dest}")"
  builtin "${cmd}" "${dest}"
}

cd() {
  cd_helper cd "$@"
}
pushd() {
  cd_helper pushd "$@"
}

# Attach to a tmux session or start a new one.
ta() {
  tmux attach -d || tmux new
}
top() {
  local top_args=""
  # top on Mac OS X does not sort by CPU by default; fix that.
  if [ "${OSTYPE#darwin}" != "${OSTYPE}" ]; then
    top_args="-o cpu"
  fi
  TOP="$((${LINES:-24} - 7))" command top ${top_args} "$@"
}
# Sort du output by size.
sortdu() {
	if [ "$#" = 0 ]; then
		du -sxk * .??* | sort -n
	else
		du -sxk "$@" | sort -n
	fi
}
# Convert output of du -k to human readable sizes.
sortduh() {
  sortdu "$@" | awk '{ $1 = $1 * 1024; print; }' | human
}
strictperl() {
  perl -Mstrict -w -MData::Dumper "$@"
}

# git sets better options if $LESS is unset.
git() {
    # MacOS env doesn't have --unset.
    (unset LESS; command git "$@")
}

ikiwiki-johntobin.ie() {
  if ! type tidy > /dev/null; then
    echo "apt-get install tidy" >&2
    return 1
  fi
  ikiwiki --setup ~/.ikiwiki/johntobin.ie "$@"
}

ikiwiki-johntobin.ie-preview() {
  ikiwiki-johntobin.ie --render "$@" | w3m -T text/html
}

clisp() {
  (ulimit -v 1048576 && command clisp -ansi -m 128MB "$@")
}

# Load .bcrc to have some helper stuff, but only when running interactively.
bc() {
  if [ -t 0 -a "$#" -eq 0 ]; then
    command bc -q -i "${HOME}/.bcrc"
  else
    command bc "$@"
  fi
}

# Adapted from http://www.chiark.greenend.org.uk/~sgtatham/aliases.html
_echo-literally-helper() {
  history 1 | perl -pe 's/^ *[0-9]+ +[^ ]+ //'
}
alias echo-literally='_echo-literally-helper #'

irssi() {
  TERM=xterm-color command irssi "$@"
}

shell_functions() {
  set | grep '() $'
}

countsort() {
  sort "$@" | uniq -c | sort -n
}

only_duplicates() {
  fmt -1 "$@" | sort | uniq -d | xargs echo
}

delete-ipad-app-backups() {
  rm "${HOME}/Music/iTunes/iTunes Media/Mobile Applications"/*
}

timestamp-to-human-localtime() {
  strictperl -n -e 'print scalar localtime $_, qq{\n}'
}

# Wrappers around 'go doc'.
godocl() {
  go doc "$@" | less
}
godocf() {
  go doc "$@" | grep ^func
}
godocserver() {
  echo "http://localhost:12345/"
  godoc --http=:12345
}
gocdpkg() {
  local pdir
  pdir="$(go list -f '{{ .Dir }}' "$1")"
  if [ -z "${pdir}" ]; then
    echo "no directory found for pkg $1"
    return 1
  fi
  cd "${pdir}"
}

# Load errors from $1.
vim-cfile() {
  vim -c ':cfile '"$1"' | :cwindow'
}
