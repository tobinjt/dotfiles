#!/bin/bash

# Shell-neutral environment variables needed for interactive shells.
# We do enough to set $PATH, then check for being an interactive shell: if we're
# not interactive we skip everything else.

# Where Go should install stuff.  Set here so that it can be used in $PATH.
GOPATH="${HOME}/tmp/bin/go"
# Set up $PATH.  Each directory that exists will be *prepended* to $PATH, so put
# more specific directories last.
path_additions=(
  # Sometimes I need binaries from here.
  "/sbin" "/usr/sbin" "/usr/local/sbin"
  # These are automatically added but *after* this file is sourced by ~/.zshenv,
  # so any binaries in /usr/local/bin won't be in $PATH yet.  Add them here for
  # reliability.
  "/bin" "/usr/bin" "/usr/local/bin"
  # Homebrew's Apple silicon directory.
  "/opt/homebrew/bin" "/opt/homebrew/sbin"
  # Node modules.
  "${HOME}/tmp/bin/node_modules/bin"
  # Python tooling in virtualenvs.
  "${HOME}/tmp/bin/virtualenv/python/bin" "${HOME}/tmp/bin/virtualenv/flexget/bin"
  # Golang.
  "${GOPATH}/bin"
  # Rust.
  "${HOME}/.cargo/bin"
  # Wezterm.
  "/Applications/WezTerm.app/Contents/MacOS"
  # AppImage of Neovim for Debian which has an older version packaged.
  "${HOME}/tmp/bin/nvim/nvim/usr/bin"
  # Neovim on MacOS without Homebrew.
  "${HOME}/tmp/bin/nvim/nvim/bin"
  # Tools installed by Neovim's Mason.
  "${HOME}/.local/share/nvim/mason/bin"
  # Manual install of lazygit.
  "${HOME}/tmp/bin/lazygit"
  "${HOME}/bin"
)
for path_addition in "${path_additions[@]}"; do
  if [ -d "${path_addition}" ]; then
    PATH="${path_addition}:${PATH}"
  fi
done

# EDITOR is set here so that it's correct when running non-interactively, e.g.
# when sshing in to run update-dotfiles-and-bin, which runs git pull, which
# needs a commit message for merges.
if type nvim >& /dev/null; then
  EDITOR="nvim"
else
  EDITOR="vim"
fi
export EDITOR GOPATH PATH

# Make a tmp dir if necessary.
if [ ! -d "${HOME}/tmp" ]; then
  mkdir -m 0700 "${HOME}/tmp"
fi

# Umask is here so that it's set when scp(1)ing.
umask 022

# Local non-interactive stuff
local_shellrc="${HOME}/.shellrc-local"
if [ -f "${local_shellrc}" ]; then
  . "${local_shellrc}"
fi

# Be careful not to break $PATH if deduplicate_path fails.
new_PATH="$(deduplicate_path "${PATH}")"
if [ -n "${new_PATH}" ]; then
  PATH="${new_PATH}"
else
  printf "Warning: deduplicate_path failed!\\n" >&2
fi

if [ "$-" = "${-//i/}" ]; then
  # This is not an interactive shell, skip everything else in this file.
  return
fi

## Python.
MYPY_CACHE_DIR="${HOME}/tmp/generated/mypy_cache"
PYTHONDONTWRITEBYTECODE="No .pyc files please"
# Set breakpoint() in Python to call pudb; untested.
PYTHONBREAKPOINT="pudb.set_trace"
export MYPY_CACHE_DIR PYTHONDONTWRITEBYTECODE PYTHONBREAKPOINT

## Homebrew.
# Don't install from source if fetching the bottle fails.
HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK=1
export HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK

if command -v git > /dev/null 2>&1; then
  DIFF="git --no-pager diff --no-index"
else
  DIFF="diff -u"
fi
# Sort filenames as I expect them to be sorted, regardless of locale.
LC_COLLATE="C"
# smart case matching; long prompt; suppress dumb terminal error messages;
# allow ANSI colour escape sequences; highlight the first new line when
# moving through the file; exit immediately if the contents can be displayed on
# a single screen; do not send terminal initialisation and deinitialisation
# commands because they clear the screen (copied from git).
LESS="iMdRWFX"
PAGER="less"
# Don't create or use a shared connection for rsync.
RSYNC_RSH="ssh -o ControlPath=none"
# Disable shellcheck warnings about not checking sourced files.
SHELLCHECK_OPTS="-e SC1090 -e SC1091"
export DIFF LC_COLLATE LESS PAGER RSYNC_RSH SHELLCHECK_OPTS

if [ -n "${TMUX:-}" ] && [ "${USER}" != "johntobin" ]; then
  # Put the user in the tmux pane title to warn me it's a different user.
  tmux rename-window -t "${TMUX_PANE}" "${USER}"
fi

# Local interactive stuff
local_shellrc="${HOME}/.shellrc-local-interactive"
if [ -f "${local_shellrc}" ]; then
  . "${local_shellrc}"
fi
