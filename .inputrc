# inputrc for libreadline
# See readline(3readline) and `info rluserman' for more information.

$include /etc/inputrc

## Start with options.

# Use vi keymap.
#set editing-mode vi

# The bell must die!
set bell-style none
# Add a / to symlinks to directories on tab completion.
set mark-symlinked-directories on
# Display completions in columns, sorted down the column rather than across
# the row.
set print-completions-horizontally off
# When printing completions, display common prefixes in a different color.
# Needs bash 4.4.
set colored-completion-prefix on
# Append a character to possible completion indicating file type.
set visible-stats on
# Case-insensetive tab completion.
set completion-ignore-case on
# When completing in the middle of a filename, be clever about not inserting
# characters already present after the cursor.
set skip-completed-text on
# Be 8 bit clean.
set input-meta on
set output-meta on
# Better paste support.
set enable-bracketed-paste on

## Common keybindings

# This is one of the most annoying things I have ever encountered.  By
# default shift-3 inserts a comment at the start of the line and hits
# return, basically cancelling the command you were just typing.
"\M-#": redraw-current-line
# On some Apple keyboards shift-3 sends a weird pound sign, remap it to hash.
"£": "#"

### Home and End keys

# allow the use of the Home/End keys - Linux VT?
"\e[1~": beginning-of-line
"\e[4~": end-of-line
# for screen, non RH/Debian xterm, possibly VT220 also.
"\eOH": beginning-of-line
"\eOF": end-of-line
# for freebsd console, kvt??
"\e[H": beginning-of-line
"\e[F": end-of-line
# for PuTTY
"\e[[1~": beginning-of-line
"\e[[4~": end-of-line
$if term=rxvt
    "\e[7~": beginning-of-line
    "\e[8~": end-of-line
$endif

# allow the use of the Delete/Insert keys
"\e[3~": delete-char
"\e[2~": quoted-insert

### mappings for Ctrl-left-arrow and Ctrl-right-arrow for word moving
# xterm
"\e[1;5C": forward-word
"\e[1;5D": backward-word
# Dunno - taken from Debian /etc/inputrc
"\e[5C": forward-word
"\e[5D": backward-word
# Dunno - taken from Debian /etc/inputrc
"\e\e[C": forward-word
"\e\e[D": backward-word
# rxvt, Eterm
"\eOc": forward-word
"\eOd": backward-word
# PuTTY
"\eOD": backward-word
"\eOC": forward-word

# Convert smart quotes to real quotes.
"\xE2\x80\x9C": "\""
"\xE2\x80\x9D": "\""
"\xE2\x80\x98": "'"
"\xE2\x80\x99": "'"
# Convert non-breaking space to space.
"\xC2\xA0": " "
# Minus and em-dash into plain dashes.
"\xE2\x80\x93": "-"
"\xE2\x80\x94": "--"
# Ellipsis...
"\xE2\x80\xA6": "..."
# Bracketed paste escape characters; discard them if they're pasted into the
# shell.
"\e[200~": ""
"\e[201~": ""

# Emacs mode key bindings.
$if mode=emacs
  # C-n and C-p complete words using previously-typed words (like in vim).
  "\C-n": dabbrev-expand
  "\C-p": "\e-\C-n"
$endif

# Vi mode key bindings.
$if mode=vi
    set keymap vi-command
    # these are for vi-command mode

    set keymap vi-insert
    # these are for vi-insert mode
    "\C-k": kill-line
    "\C-a": beginning-of-line
    "\C-l": clear-screen
    "\C-d": delete-char
    "\C-b": backward-char
    "\C-f": forward-char
    "\C-x!": possible-command-completions

    # Investigate these.
    #shell-backward-word shell-expand-line shell-forward-word shell-kill-word

    # Clash with default vi key bindings
    #"\C-n": next-history
    #"\C-p": previous-history
$endif

# This makes space expand stuff so you can see what !$, !:0 etc. are.
$if Bash
    Space: magic-space
$endif
