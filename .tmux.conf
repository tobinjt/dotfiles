# ###########
# Keybindings
# ###########
# Set escape character to C-@
set -g prefix C-@
unbind C-b
# bind C-@ send-prefix
# Make C-space C-space bounce between windows.
bind C-@ last-window
bind c new-window -c "#{pane_current_path}"

# Use vi keybindings.  :list-keys shows the keybindings.
setw -g mode-keys "vi"

# Possibly useful: make Ctrl-pgup etc work
setw -g xterm-keys on

# Don't kill the server when the last session exits.  This might help on Mac OS
# where full disk access not being granted breaks crontab.
setw -g exit-empty off

# More intuitive key bindings for splitting panes.
unbind %
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# ##########
# Status bar
# ##########
# Underline the curent window.
setw -g window-status-current-attr underscore
set -g status-left " #{session_name}    "
# Default of current time and other stuff changes too often.
set -g status-right ""
# Don't periodically update the status bar.
set -g status-interval 0

# By default do not notify when there's activity in a window.
setw -g monitor-activity off
# But if activity monitoring is turned on for a window, update the status bar
# when activity is detected.
set -g visual-activity on
# Bindings to turn activity monitoring on and off.
bind m set -w monitor-activity on
bind M set -w monitor-activity off

# Automatically set window title
setw -g automatic-rename
set -g allow-rename

# Display messages for longer.
set -g display-time 2000

# ########
# Settings
# ########
# Set term to xterm; there are dire warnings about this in the tmux FAQ.
set -g default-terminal "xterm-256color"

# Disable the bell :)
set -g bell-action none

# I think this tries to set the xterm's title.
set -g set-titles on
set -g set-titles-string "tmux on #{host_short}"

# This requires tmux 1.2 or later, but it stops tmux eating escapes.
set -g -s escape-time 50

# Number of lines of scrollback.
set -g history-limit 20000

# Start window numbering at 1.
set -g base-index 1

# Enable focus events if the terminal supports it; should allow vim to react to
# being focused, which probably doesn't do anything if autoread isn't set in
# vim.
set-option -g focus-events on

# Copied from https://github.com/altercation/solarized
#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg black #base02
set-option -g pane-active-border-fg brightgreen #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green
